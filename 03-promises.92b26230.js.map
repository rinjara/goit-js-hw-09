{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,UAG/B,SAASI,EAAcC,EAAUP,GAC/B,IAAMQ,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUP,UAEpBa,EAAO,CAAEN,WAAUP,YAEpBA,MAyBPD,EAAKM,KAAKU,iBAAiB,UArB3B,SAAsBC,GACpBA,EAAEC,iBACF,IAAMb,EAASc,OAAOnB,EAAKK,OAAOe,OAC5BhB,EAAOe,OAAOnB,EAAKI,KAAKgB,OAC1BC,EAAWF,OAAOnB,EAAKC,MAAMmB,OACjC,GAAIC,GAAY,GAAKjB,EAAO,GAAKC,EAAS,EACxCP,EAAAwB,OAAOC,QAAS,yCAGlB,IAAK,IAAIC,EAAI,EAAGA,GAAKnB,EAAQmB,GAAK,EAChCjB,EAAciB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUP,EAAKyB,EAALzB,MACjBH,EAAAwB,OAAOK,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAAN3B,EAAM,UAE9D4B,OAAM,SAAAH,G,IAAGlB,EAAQkB,EAARlB,SAAUP,EAAKyB,EAALzB,MAClBH,EAAAwB,OAAOQ,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAAN3B,EAAM,UAE9DoB,GAAYjB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const amount = Number(refs.amount.value);\n  const step = Number(refs.step.value);\n  let delayRef = Number(refs.delay.value);\n  if (delayRef <= 0 || step < 0 || amount < 0) {\n    Notify.warning(`Numbers must be positive only!!!`);\n    return;\n  }\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayRef)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayRef += step;\n  }\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","form","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","Number","value","delayRef","Notify","warning","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.92b26230.js.map"}