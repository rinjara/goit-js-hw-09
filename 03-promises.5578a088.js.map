{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,UAG/B,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUP,MAAAQ,IAEpBM,EAAO,CAAEE,SAAAT,EAAUP,MAAAQ,MAEpBA,MAEFS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MACjBH,EAAAsB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANrB,EAAM,UAE9DsB,OAAM,SAAAJ,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MAClBH,EAAAsB,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANrB,EAAM,UAmBhED,EAAKM,KAAKmB,iBAAiB,UAf3B,SAAsBC,GACpBA,EAAEC,iBACF,IAAMtB,EAASuB,OAAO5B,EAAKK,OAAOwB,OAC5BzB,EAAOwB,OAAO5B,EAAKI,KAAKyB,OAC1BC,EAAWF,OAAO5B,EAAKC,MAAM4B,OACjC,GAAIC,GAAY,GAAK1B,EAAO,GAAKC,EAAS,EACxCP,EAAAsB,OAAOW,QAAS,yCAGlB,IAAK,IAAIC,EAAI,EAAGA,GAAK3B,EAAQ2B,GAAK,EAChCzB,EAAcyB,EAAGF,GACjBA,GAAY1B,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const amount = Number(refs.amount.value);\n  const step = Number(refs.step.value);\n  let delayRef = Number(refs.delay.value);\n  if (delayRef <= 0 || step < 0 || amount < 0) {\n    Notify.warning(`Numbers must be positive only!!!`);\n    return;\n  }\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayRef);\n    delayRef += step;\n  }\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","form","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","param","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","Number","value","delayRef","warning","i"],"version":3,"file":"03-promises.5578a088.js.map"}