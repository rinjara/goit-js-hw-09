{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,UAG/B,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUP,MAAAQ,IAEpBM,EAAO,CAAEE,SAAAT,EAAUP,MAAAQ,MAEpBA,MAEFS,MAAK,EAACD,SAAEA,EAAQhB,MAAEA,MACjBH,EAAAqB,OAAOC,QAAQ,uBAAqBH,QAAiBhB,UAEtDoB,OAAM,EAACJ,SAAEA,EAAQhB,MAAEA,MAClBH,EAAAqB,OAAOG,QAAQ,sBAAoBL,QAAehB,UAmBxDD,EAAKM,KAAKiB,iBAAiB,UAf3B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMpB,EAASqB,OAAO1B,EAAKK,OAAOsB,OAC5BvB,EAAOsB,OAAO1B,EAAKI,KAAKuB,OAC9B,IAAIC,EAAWF,OAAO1B,EAAKC,MAAM0B,OACjC,GAAIC,GAAY,GAAKxB,EAAO,EAC1BN,EAAAqB,OAAOU,QAAQ,yCAGjB,IAAK,IAAIC,EAAI,EAAGA,GAAKzB,EAAQyB,GAAK,EAChCvB,EAAcuB,EAAGF,GACjBA,GAAYxB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const amount = Number(refs.amount.value);\n  const step = Number(refs.step.value);\n  let delayRef = Number(refs.delay.value);\n  if (delayRef <= 0 || step < 0) {\n    Notify.warning(`Numbers must be positive only!!!`);\n    return;\n  }\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayRef);\n    delayRef += step;\n  }\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","form","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","Notify","success","catch","failure","addEventListener","e","preventDefault","Number","value","delayRef","warning","i"],"version":3,"file":"03-promises.da5efb56.js.map"}